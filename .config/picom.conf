
######################################
#
# Backend
#
######################################

# Backend to use: "xrender" or "glx".
# GLX backend is typically much faster but depends on a sane driver.
backend = "glx";

######################################
#
# GLX backend
#
######################################

# glx-no-stencil = true;

# GLX backend: Copy unmodified regions from front buffer instead of redrawing them all.
# My tests with nvidia-drivers show a 10% decrease in performance when the whole screen is modified,
# but 20% increase when only 1/4 is.
# My tests on nouveau show terrible slowdown
glx-copy-from-front = false;

# glx-use-copysubbuffermesa = true;
# glx-no-rebind-pixmap = true;
# glx-swap-method = "undefined";
# glx-use-gpushader4 = true;
# xrender-sync = true;
# xrender-sync-fence = true;


######################################
#
# Shadows
# 
######################################

# Enabled client-side shadows on windows.
shadow = true;
# The blur radius for shadows. (default 12)
shadow-radius = 7;
# The left offset for shadows. (default -15)
shadow-offset-x = -7;
# The top offset for shadows. (default -15)
shadow-offset-y = -7;
# The transluency for shadows. (defualt .75)
shadow-opacity = 0.7;

# Set if you want different colour shadows
# shadow-red = 0.0;
# shadow-green = 0.0;
# shadow-blue = 0.0;

# Exclude certain programs since it may cause visual glitches
shadow-exclude = [
    "! name~=''",
	"name = 'Notification'",
	"name = 'VLC'",
	"name = 'picom'",
    "class_g = 'Rofi'",
    "class_g ?= 'Polybar'",
	"class_g = 'Firefox' && argb",
	"_GTK_FRAME_EXTENTS@:c",
    "_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'"
];
# Avoid drawing shadow on all shaped windows (see also: --detect-rounded-corners)
shadow-ignore-shaped = false;

######################################
#
# Opacity
#
######################################

inactive-opacity = 0.8;
# active-opacity = 0.8;
frame-opacity = 0.7;
inactive-opacity-override = false;

# Dim inactive windows. (0.0 - 1.0)
# inactive-dim = 0.2;
# Do not let dimness adjust based on window opacity.
# inactive-dim-fixed = true;
# Blur background of transparent windows. Bad performance with X render backend. GLX backend is preferred.
blur-background = true;
# Blur-background of opaque windows with transparent frames as well.
# blur-background-frame = true;
# Do not let blur radius adjust based on window opacity
# blur-background-fixed = true;
blur-background-exclude = [
	#"window_type = 'dock'",
	"window_type = 'desktop'",
	"_GTK_FRAME_EXTENTS@:c"
];
blur-method = "kawase";
blur-strength = 15;
blur-kern = "3x3box";
# blur-kern = "5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
# Find out window names: xprop WM_CLASS
opacity-rule = [ 
    #"80:class_g = 'URxvt'", 
    "90:class_g = 'code-oss'",
    "90:class_g = 'Spotify'"  
];
######################################
#
# Fading
#
######################################

# Fade windows during opacity changes.
fading = true;
# The time between steps in a fade in milliseconds. (default 10).
# fade-delta = 30;
# Opacity change between steps while fading in. (default 0.028).
fade-in-step = 0.03;
# Opacity change between steps while fading out. (default 0.03).
fade-out-step = 0.03;
# Fade windows in/out when opening/closing
# no-fading-openclose = true;
# no-fading-destroyed-argb = true;

# Specify a list of conditions of windows that should not be faded.
fade-exclude = [
    "class_g = 'Rofi'"
];

######################################
#
# Other
#
######################################

# Try to detect WM windows and mark them as active.
mark-wmwin-focused = true;
# Mark all non-WM but override-redirect windows active (e.g. menus).
mark-ovredir-focused = true;
# Use EWMH _NET_WM_ACTIVE_WINDOW to determine which window is focused instead of using FocusIn/Out events.
# Usually more reliable but depends on a EWMH-compliant WM.
# use-ewmh-active-win = true;
# Detect rounded corners and treat them as rectangular when --shadow-ignore-shaped is on.
detect-rounded-corners = true;

# Detect _NET_WM_OPACITY on client windows, useful for window managers notpassing _NET_WM_OPACITY of client windows to frame windows.
# This prevents opacity being ignored for some apps.
# For example without this enabled my xfce-notifyd is 100% opacity no matter what.
detect-client-opacity = true;

# Specify refresh rate of the screen.
# If not specified or 0, picom will try detecting this with X RandR extension.
refresh-rate = 0;

# Vertical synchronization: match the refresh rate of the moniter
vsync = false;

# Enable DBE painting mode, intended to use with VSync to (hopefully) eliminate tearing.
# Reported to have no effect, though.
dbe = false;

# Limit picom to repaint at most once every 1 / refresh_rate second to boost performance.
# This shuld not be used with --vsync drm/opengl/opengl-olm as they essentially does --sw-opti's job already,
# unless you wish to specify a lower refresh rate than the actual value.
# sw-opti = true;

# Unredirect all windows if a full-screen opaque window is detected, to maximize performanse for full-screen windows, like games.
# Known to cause flickering when redirecting/unredirecting windows.
# unredir-if-possible = true;
# unredir-if-possible-delay = 5000;
# unredir-if-possible-exclude = [ ];

# Specify a list of conditions of windows that should always be considered focused.
focus-exclude = [ ];

# Use WM_TRANSIENT_FOR to group windows, and consider windows in the same group focused at the same time.
detect-transient = true;

# Use WM_CLIENT_LEADER to group windows, and consider windows in the same group focused at the same time.
# WM_TRANSIENT_FOR has higher priority if --detect-transient is enabled, too.
detect-client-leader = true;
invert-color-include = [ ];
# resize-damage = 1;

######################################
#
# Window type settings
#
######################################
wintypes:
{
    tooltip = 
    { 
        # fade: Fade the particular type of windows.    
        fade = true; 
        # shadow: Give those windows shadow 
        shadow = true; 
        # opacity: Default opacity for the type of windws.
        opacity = 0.75; 
        # focus: Wheter to always consider windows of this type focues.
        focus = true; 
    };
};

